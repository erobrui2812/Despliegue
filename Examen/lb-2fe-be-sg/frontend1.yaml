AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Plantilla Frontend1.

Parameters:
  AMI:
    Description: Imagen SO
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/canonical/ubuntu/server/jammy/stable/current/amd64/hvm/ebs-gp2/ami-id

  VPC:
    Description: VPC
    Type: AWS::EC2::VPC::Id

  KeyName:
    Description: Par de llaves
    Type: AWS::EC2::KeyPair::KeyName
    Default: vockey

  InstanceType:
    Description: Recursos instancia
    Type: String
    Default: t2.large
    AllowedValues:
      - t2.micro
      - t2.large
  
  Subnet:
    Description: Subred *OBLIGATORIO*
    Type: AWS::EC2::Subnet::Id

Resources:
  InstanciaFrontend1:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT5M
        Count: 1
    Properties:
      Tags:
        - Key: Name
          Value: Frontend1
      ImageId: !Ref AMI
      InstanceType: !Ref InstanceType      
      KeyName: !Ref KeyName
      SubnetId: !Ref Subnet
      SecurityGroupIds:
        - Fn::ImportValue: SshSecurityGroup
        - Fn::ImportValue: FrontendSecurityGroup
      UserData:
        Fn::Base64: !Sub
          - |
            #!/bin/bash -xe
            exec > /tmp/userdata.log 2>&1
            #====================================================================#
            # PREPARAR BOOTSTRAP DE CFN HELPER SCRIPTS
            #====================================================================#
            apt update -y
            apt install python3-pip -y
            pip3 install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-py3-latest.tar.gz
            ln -s /usr/local/init/ubuntu/cfn-hup /etc/init.d/cfn-hup
            #====================================================================#

            sudo sed -i 's/^\$nrconf{restart} = "i";/\$nrconf{restart} = "a";/' /etc/needrestart/needrestart.conf
            sudo sed -i 's/^\$nrconf{kernelhints} = -1;/\$nrconf{kernelhints} = -1;/' /etc/needrestart/needrestart.conf
            sudo sed -i 's/^\$nrconf{checks} = 1;/\$nrconf{checks} = 0;/' /etc/needrestart/needrestart.conf

            apt upgrade -y
            apt install apache2 git -y

            a2enmod proxy
            a2enmod proxy_http

            echo "<VirtualHost *:80>
            ServerAlias *
            DocumentRoot /var/www/html
            ProxyPass "/api/" "http://${PublicIpBack}:8080/studentify/api/"
            ProxyPassReverse "/api/" "http://${PublicIpBack}:8080/studentify/api/"
            </VirtualHost>" > /etc/apache2/sites-available/frontend.conf
            mkdir -p /var/www/html
            mkdir -p /tmp/frontend

            git clone https://github.com/DavidHormigoRamirez/frontend_daw.git /tmp/frontend
            cp -r /tmp/frontend/* /var/www/html/
            
            sed -i "1i <h1>Elias Frontend1</h1>" /var/www/html/index.html

            sudo chmod -R 777 /var/www/html
            sudo chown -R www-data:www-data /var/www/html

            sed -i "s/CAMBIAR/\/api\/students/g" /var/www/html/index.html
            sed -i "s/fetch('CAMBIAR',/fetch('\/api\/students',/g" /var/www/html/create.html
            
            a2dissite 000-default.conf
            a2ensite frontend.conf
            systemctl restart apache2
            
            #====================================================================#
            # Este tiene que ser tu ultima instruccion del script
            # Recuerda modificar el valor del --resource al id l√≥gico de la instancia
            /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource InstanciaFrontend1 --region ${AWS::Region}

          - { PublicIpBack: !ImportValue PrivateIpBack }

Outputs:
  IPFrontendPrivada:
    Description: IP privada Frontend1
    Value: !GetAtt InstanciaFrontend1.PrivateIp
    Export:
      Name: PrivateIpFrontend1

  IPFrontendPublica:
    Description: IP publica Frontend1
    Value: !GetAtt InstanciaFrontend1.PublicIp
    Export:
      Name: PublicIpFrontend1